<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.up_vams.photo.dao.PhotoMapper">
    <resultMap id="PhotoResultMap" type="Photo">
        <id column="photo_id" property="photoId" jdbcType="VARCHAR"/>
        <result column="name" property="photoName" jdbcType="VARCHAR"/>
        <result column="title" property="photoTitle" jdbcType="VARCHAR"/>
        <result column="latitude" property="photoLatitude" jdbcType="DECIMAL"/>
        <result column="longitude" property="photoLongitude" jdbcType="DECIMAL"/>
        <result column="view_num" property="photoViewNum" jdbcType="INTEGER"/>
        <result column="like_num" property="photoLikeNum" jdbcType="INTEGER"/>
        <result column="creator_id" property="photoCreatorId" jdbcType="VARCHAR"/>

        <result column="photo_ossname" property="photoOssname" jdbcType="VARCHAR"/>

    </resultMap>
    <resultMap id="PhotoResultMapWithBLOBs" type="Photo" extends="PhotoResultMap">
        <result column="introduction" property="photoIntroduction" jdbcType="LONGVARCHAR"/>
    </resultMap>


    <insert id="insert" parameterType="Photo">
      INSERT INTO t_photo (photo_id, name, title,
      latitude, longitude, creator_id, introduction,photo_ossname
      )
    VALUES (#{photoId,jdbcType=VARCHAR}, #{photoName,jdbcType=VARCHAR}, #{photoTitle,jdbcType=VARCHAR},
      #{photoLatitude,jdbcType=DECIMAL}, #{photoLongitude,jdbcType=DECIMAL}, #{photoCreatorId,jdbcType=VARCHAR}, #{photoIntroduction,jdbcType=LONGVARCHAR}, #{photoOssname,jdbcType=VARCHAR}
      )
    </insert>

    <select id="selectSchoolMore" parameterType="string" resultMap="PhotoResultMap">
        SELECT photo_id,photo_ossname FROM t_photo WHERE photo_id=#{photoId};
    </select>

    <!--/**
    * 分页查询照片
    * @param page Page<SchoolPhoto>
    * @return  照片Page  并没有用
    */-->
    <select id="selectPageList" parameterType="page" resultMap="PhotoResultMapWithBLOBs">
        SELECT photo_id, name, title,
        latitude, longitude, creator_id, introduction,photo_ossname
        FROM t_photo WHERE photo_id IN
        <foreach collection="list" open="(" close=")" separator="," item="item">
            #{item.photoId}
        </foreach>
        LIMIT 0,8;
    </select>

    <!-- 通过照片id集合查询照片列表-->
    <select id="selectPhotos" resultMap="PhotoResultMapWithBLOBs">
        SELECT photo_id, name, title,
        latitude, longitude, creator_id, introduction,photo_ossname
        FROM t_photo WHERE photo_id IN
        <foreach collection="list" open="(" close=")" separator="," item="item">
            #{item.photoId}
        </foreach>
    </select>


    <select id="selectPhotosByUP" resultMap="PhotoResultMap" >
        SELECT photo_id, name, title,
        latitude, longitude, creator_id, introduction,photo_ossname
        FROM t_photo WHERE photo_id IN
        <foreach collection="list" open="(" close=")" separator="," item="item">
            #{item.photoId}
        </foreach>
    </select>


    <!--通过照片主键查询-->
    <select id="selectByPK" parameterType="string" resultMap="PhotoResultMapWithBLOBs">
        SELECT photo_id, name, title,
        latitude, longitude, creator_id, introduction,photo_ossname
        FROM t_photo WHERE photo_id=#{pk}
    </select>


    <update id="update" parameterType="Photo">
        UPDATE t_photo
        <set>
            <if test="photoName != null">
                name = #{photoName,jdbcType=VARCHAR},
            </if>
            <if test=" photoTitle != null">
                title = #{photoTitle,jdbcType=VARCHAR},
            </if>
            <if test=" photoIntroduction != null">
                introduction = #{photoIntroduction,jdbcType=LONGVARCHAR},
            </if>
            <if test="photoViewNum != null">
                view_num = #{photoViewNum,jdbcType=INTEGER},
            </if>
            <if test="photoLikeNum != null">
                like_num = #{photoLikeNum,jdbcType=INTEGER},
            </if>

        </set>
        WHERE photo_id=#{photoId}
    </update>


</mapper>